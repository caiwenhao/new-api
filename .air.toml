# Air 配置文件 - Go 热重载工具
# 用于 New API 开发环境

root = "."
testdata_dir = "testdata"
tmp_dir = "tmp"

[build]
  # 要监视的文件扩展名
  include_ext = ["go", "tpl", "tmpl", "html"]
  
  # 要排除的文件扩展名
  exclude_ext = ["txt", "md", "log"]
  
  # 要监视的目录
  include_dir = []
  
  # 要排除的目录
  exclude_dir = ["assets", "tmp", "vendor", "testdata", "web", "logs", "data", ".git", ".vscode", ".idea"]
  
  # 要排除的文件
  exclude_file = []
  
  # 如果文件更改过于频繁，则没有必要在每次更改时都触发构建。可以设置触发构建的延迟时间
  delay = 1000
  
  # 发生构建错误时，停止运行旧的二进制文件
  stop_on_root = false
  
  # 使用轮询文件更改而不是使用 fsnotify
  poll = false
  
  # 轮询间隔（毫秒）
  poll_interval = 0
  
  # 二进制文件名
  bin = "./tmp/main"
  
  # 自定义二进制文件
  cmd = "go build -o ./tmp/main ."
  
  # 自定义运行命令
  full_bin = "./tmp/main"
  
  # 构建参数
  args_bin = []
  
  # 传递给二进制文件的参数
  env_vars = []
  
  # 在构建之前运行的命令
  pre_cmd = []
  
  # 在构建之后运行的命令
  post_cmd = []
  
  # 在每次构建后发送中断信号 (windows 不支持此功能)
  send_interrupt = false
  
  # 发送中断信号后的延迟时间（毫秒）
  kill_delay = "0s"
  
  # 在每次构建后重新运行二进制文件
  rerun = true
  
  # 延迟重新运行二进制文件的时间（毫秒）
  rerun_delay = 500
  
  # 启用符号链接
  follow_symlink = false

[log]
  # 显示日志时间
  time = true
  
  # 只显示主日志
  main_only = false

[color]
  # 自定义每个部分显示的颜色。如果找不到颜色，使用原始的应用程序日志。
  main = "magenta"
  watcher = "cyan"
  build = "yellow"
  runner = "green"

[misc]
  # 退出时删除 tmp 目录
  clean_on_exit = false
  
  # 启用实时重新加载
  reload_on_change = true
